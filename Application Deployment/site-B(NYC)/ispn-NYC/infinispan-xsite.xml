<infinispan
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:infinispan:config:15.0 https://infinispan.org/schemas/infinispan-config-15.0.xsd
                            quay.io/infinispan/server:15.0 https://infinispan.org/schemas/infinispan-server-15.0.xsd
                            urn:org:jgroups http://www.jgroups.org/schema/jgroups-5.3.xsd"
      xmlns="urn:infinispan:config:15.0"
      xmlns:ispn="urn:infinispan:config:15.0"
      xmlns:server="quay.io/infinispan/server:15.0">

   <jgroups>
      <!--
      This configuration demonstrates cross-site replication on a single host and uses IP multicast for discovery.

      To use this configuration, do the following:
      
      * Open terminal in $ISPN_HOME.
      * Copy the server/ directory to server2/.
      * Open a terminal and run: ./bin/server.sh -c infinispan-xsite.xml
      * Open another terminal and run: ./bin/server.sh -c infinispan-xsite.xml -s server2 -Dinfinispan.site.name=site2 -o 100 -Djgroups.mcast_port=46656
      * Check server logs for the following message: "[org.infinispan.XSITE] ISPN000439: Received new x-site view: [site1, site2]"
      -->
      <stack name="bridge" extends="tcp">
         <MPING mcast_port="${jgroups.bridge.mcast_port:47655}"
                ispn:stack.combine="COMBINE"
                xmlns="urn:org:jgroups"
         />
      </stack>
      <stack name="local" extends="udp">
         <relay.RELAY2 site="${infinispan.site.name:site1}"
                       max_site_masters="${infinispan.site.max_relay_nodes:1}"
                       xmlns="urn:org:jgroups"/>
         <!-- <remote-sites default-stack="bridge">
            <remote-site name="${infinispan.site.name:site1}"/>
         </remote-sites> -->
         <remote-sites default-stack="bridge">
            <remote-site name="NYC"/>
            <remote-site name="LON"/>
            
         </remote-sites>
      </stack>
   </jgroups>

   <cache-container name="default" statistics="true">
      <transport cluster="${infinispan.cluster.name:cluster}" stack="${infinispan.cluster.stack:local}" node-name="${infinispan.node.name:}"/>
      <security>
         <authorization/>
      </security>

      <!-- Required below serialization tag when getting error about WrapperClusterEvent -->
      <serialization marshaller="org.infinispan.jboss.marshalling.commons.GenericJBossMarshaller">
            <allow-list>
                <class>org.keycloak.cluster.infinispan.WrapperClusterEvent</class>
                <regex>.*</regex>
            </allow-list>
        </serialization>

      <replicated-cache name="work" mode="SYNC" statistics="true">
      <backups>
		<backup site="LON" strategy="SYNC"/>
	</backups>
    	<encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
    </replicated-cache>
    
    
    <distributed-cache name="sessions" mode="SYNC" statistics="true">
      <backups>
		<backup site="LON" strategy="SYNC"/>
	</backups>
    	<encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
    </distributed-cache>
    
    <distributed-cache name="authenticationSessions" mode="SYNC" statistics="true">
      <backups>
		<backup site="LON" strategy="SYNC"/>
	</backups>
    	<encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
    </distributed-cache>
    
    <distributed-cache name="clientSessions" mode="SYNC" statistics="true">
      <backups>
		<backup site="LON" strategy="SYNC"/>
	</backups>
    	<encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
    </distributed-cache>
    
    <distributed-cache name="offlineSessions" mode="SYNC" statistics="true">
      <backups>
		<backup site="LON" strategy="SYNC"/>
	</backups>
    	<encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
    </distributed-cache>
    <distributed-cache name="offlineClientSessions" mode="SYNC" statistics="true">
      <backups>
		<backup site="LON" strategy="SYNC"/>
	</backups>
    	<encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
    </distributed-cache>
    
    
    <distributed-cache name="actionTokens" mode="SYNC" statistics="true">
      <backups>
		<backup site="LON" strategy="SYNC"/>
	</backups>
    	<encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
    </distributed-cache>
    
    <distributed-cache name="loginFailures" mode="SYNC" statistics="true">
      <backups>
		<backup site="LON" strategy="SYNC"/>
	</backups>
    	<encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
    </distributed-cache>    
   </cache-container>

   <server xmlns="urn:infinispan:server:15.0">
      <interfaces>
         <interface name="public">
            <inet-address value="${infinispan.bind.address:0.0.0.0}"/>
         </interface>
      </interfaces>

      <socket-bindings default-interface="public" port-offset="${infinispan.socket.binding.port-offset:0}">
         <socket-binding name="default" port="${infinispan.bind.port:31222}"/>
      </socket-bindings>

      <security>
         <security-realms>
            <security-realm name="default">
               <!-- Uncomment to enable TLS on the realm -->
               <!-- server-identities>
                  <ssl>
                     <keystore path="server.pfx"
                               password="password" alias="server"
                               generate-self-signed-certificate-host="localhost"/>
                  </ssl>
               </server-identities-->
               <properties-realm/>
            </security-realm>
         </security-realms>
      </security>

      <!-- <endpoints socket-binding="default" security-realm="default" /> -->
      <endpoints socket-binding="default" security-realm="default">
      <endpoint>
         <hotrod-connector name="hotrod">
            <authentication>
               <sasl mechanisms="DIGEST-MD5" server-name="infinispan-server-nyc-1"/>
            </authentication>
         </hotrod-connector>
         <rest-connector name="rest"/>
      </endpoint>
      </endpoints>
   </server>
</infinispan>
