apiVersion: apps/v1
kind: Deployment
metadata:
  name: infinispan-server-nyc-1
  labels:
    app: infinispan-server-nyc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: infinispan-server-nyc
  template:
    metadata:
      labels:
        app: infinispan-server-nyc
    spec:
      containers:
      - name: ispn-nyc-1
        image: prasadbadwar/infinispan:nyc-site
        env:
        - name: USER
          value: admin
        - name: PASS
          value: password
        ports:
        - containerPort: 31222
        command:
        - /opt/infinispan/bin/launch.sh
        args:
        - "-c"
        - "infinispan-xsite.xml"
        - "-Dinfinispan.site.name=NYC"
        - "-Djgroups.mcast_port=46666"

---
apiVersion: v1
kind: Service
metadata:
  name: infinispan-server-nyc-1
spec:
  selector:
    app: infinispan-server-nyc
  ports:
  - protocol: TCP
    port: 31222
    targetPort: 31222
  type: LoadBalancer  # Adjust to NodePort or LoadBalancer depending on how you want to expose the service

---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: keycloak-nyc
spec:
  selector:
    matchLabels:
      app: keycloak-nyc
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: keycloak-nyc
    spec:
      containers:
        - name: keycloak-nyc
          image: prasadbadwar/keycloak:site-nyc-v2 # Image that will be used to containers in the cluster
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 443 # The port that the container is running on in the cluster

          env:   
            - name: KEYCLOAK_ADMIN   
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD 
              value: admin          
            - name: KEYCLOAK_USER  
              value: admin              
            - name: KEYCLOAK_PASSWORD 
              value: admin
          command: ["/opt/keycloak/bin/kc.sh", "start"]

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: keycloak-nyc
spec:
  selector:
    app: keycloak-nyc
  ports:
    - protocol: "TCP"
      port: 443 # The port that the service is running on in the cluster
      targetPort: 443 # The port exposed by the service
  type: LoadBalancer # type of the service.